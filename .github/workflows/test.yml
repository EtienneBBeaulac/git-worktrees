name: Tests

on:
  push:
  pull_request:

jobs:
  fast:
    name: Fast checks
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        fzf: [false]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup packages (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y zsh git $([ "${{ matrix.fzf }}" = "true" ] && echo fzf || true)

      - name: Run fast tests
        shell: bash
        run: |
          FAST_ONLY=1 bash tests/run.sh

  full:
    name: Full matrix
    needs: fast
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04, macos-13, macos-14]
        fzf: [true, false]
        fzf_channel: [system, bin]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup packages (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y zsh git $([ "${{ matrix.fzf }}" = "true" ] && [ "${{ matrix.fzf_channel }}" = "system" ] && echo fzf || true)

      - name: Install pinned fzf (Linux binary)
        if: runner.os == 'Linux' && matrix.fzf == true && matrix.fzf_channel == 'bin'
        env:
          FZF_VERSION: 0.27.2
        run: |
          set -euxo pipefail
          arch=$(uname -m)
          case "$arch" in
            x86_64) fzf_arch=linux_amd64;;
            aarch64|arm64) fzf_arch=linux_arm64;;
            *) echo "Unsupported arch: $arch" >&2; exit 1;;
          esac
          tmpdir=$(mktemp -d)
          cd "$tmpdir"
          curl -fsSL -o fzf.tar.gz "https://github.com/junegunn/fzf/releases/download/${FZF_VERSION}/fzf-${FZF_VERSION}-${fzf_arch}.tar.gz"
          tar -xzf fzf.tar.gz
          sudo install -m 0755 fzf /usr/local/bin/fzf
          fzf --version

      - name: Setup packages (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install zsh git $([ "${{ matrix.fzf }}" = "true" ] && echo fzf || true)

      - name: Run full tests
        shell: bash
        run: |
          echo "Tool versions:" && zsh --version && git --version && awk --version || true
          command -v fzf >/dev/null 2>&1 && echo "fzf: $(fzf --version)" || echo "fzf: not installed"
          echo "PATH=$PATH" && which -a zsh || true && which -a awk || true
          bash tests/run.sh


